To reconstruct ancestral gene orders, AGORA needs 3 kind of files (see example/data/):

-A species tree (eg: species.conf)
-A forest of extant gene trees reconciliated with the species tree (eg: GeneTreeForest.phylTree)
-the order of extant genes in each extant genomes. (eg: genes/genes.M1.list.bz2)

1) the species tree

First, you need a species tree in the PhylTree format.
The PhylTree format is a readable format of trees, based on tabulations and informations.

an example of species tree is given, see:

Species.conf -> PhylTree format
Species.nwk -> Newick format
Species.pdf (to visualize the example species tree)

you can transform nhx specie tree to phyltree specie tree using the newickSpeciesTree2phylTreeSpeciesTree.py in src directory:

../../src/newickSpeciesTree2phylTreeSpeciesTree.py Species.nwk > Species.conf


2) The forest of gene trees

The forest of gene trees has to be in Phyltree format as well.
an example is given:

GeneTreeForest.nhx.bz2 -> nhx format. each line is a family gene tree. 

You can transform NHX tree to Phyltree using the nhxGeneTrees2phylTreeGeneTrees.py script in src directory:

../../src/nhxGeneTrees2phylTreeGeneTrees.py Family1.nhx > Family1.phyltree

3) The genes files.

The genes files used by AGORA are tabular files. You have to provide 1 file per genome.

The fields are:
1. Name of the Chromosome.
2. start position of the  gene.
3. end position of the  gene.
4. gene orientation
5. gene Names. 
6. Transcript name (optional)

The names of the files have to be consistant with the names of the specie in the species tree and the gene names have to be concistant with the genes in the gene trees.

(see Species.conf, GeneTreeForest.phyltree and the 5 files of genes)

AGORA can use compressed or uncompressed files.

Once you have these 3 kind of files, you can run AGORA.



AGORA:

1) Extraction of ancestral gene content

The first step of AGORA is to extract all ancestral gene content for all ancestral genomes:

to do so, you have to run the ALL.extractGeneFamilies.py in src directory:

src/ALL.extractGeneFamilies.py example/data/Species.conf example/data/GeneTreeForest.phylTree.bz2 -OUT.ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 > example/results/GeneTreeForests.withAncGenes.phyltree 2> example/results/log.ancGenes

this will create in the results directory, an subdirectory ancGenes.
be carefull to provide the good path to write the ancGene files (ancGenes/all/ancGenes.%s.list.bz2), it will be important if you use AGORA on "robust" family in a second step (see article)

ancGenes files are tabular files, the fiels are:
1. ancestral gene Names. 
2. subsequent ones are the list of extant copies of this ancestral gene, in the genome of extant species (separated by space).


On the standard output, the scripts produce the forest of gene trees, rewritten with the ancestral gene names at each node.
example/results/GeneTreeForests.withAncGenes.phyltree

2) Agora with no selection of robust families:
----------------------------------------------
You can run the scripts one by one or you can you the encapsulated scripts (agora.py) with the configuration file (agora.ini).


A) step by step:
----------------

	*/ pairwise comparison (see article for algorithmique explanation)
	
	to launch the pairwise comparison script you have to run buildSynteny.pairwise-conservedPairs.py
	
	mkdir example/results/diags/pairwise/pairs-all/
	
	./src/buildSynteny.pairwise-conservedPairs.py ./example/data/Species.conf A0 -ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 -genesFiles=./example/data/genes/genes.%s.list.bz2 -OUT.pairwise=example/results/diags/pairwise/pairs-all/%s.list.bz2 > example/results/abc 2> example/results/diags/pairwise/pairs-all/pairs.log


	*/ Order of the ancestral gene, denovo-integration
	
	mkdir -p example/results/diags/integr/denovo-all/
	
	src/buildSynteny.integr-denovo.py example/data/Species.conf A0 -OUT.ancDiags=example/results/diags/integr/denovo-all/anc/diags.%s.list.bz2 example/results/diags/pairwise/pairs-all/%s.list.bz2 -ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 +searchLoops > example/results/diags/integr/denovo-all/graph.txt.bz2 2>example/results/diags/integr/denovo-all/log

	*/ Blocks assembly - buildSynteny.integr-groups.py
	
	mkdir -p example/results/diags/integr/denovo-all.groups/
	
	src/buildSynteny.integr-groups.py example/data/Species.conf A0 A0 -OUT.ancDiags=example/results/diags/integr/denovo-all.groups/anc/diags.%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-all/anc/diags.%s.list.bz2 -ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 -genesFiles=example/data/genes/genes.%s.list.bz2 > example/results/diags/integr/denovo-all.groups/graph.txt.bz2 2>example/results/diags/integr/denovo-all.groups/log

B) Agora.py (encapsualted scripts that will run previous scripts automaticaly.
------------------------------------------------------------------------------

You will have to use the agora.ini configuration files to prevent paths and parameters to the scripts described below and in the article.

eg: see agora.ini

juste run:

src/agora.py agora.ini -workingDir=example/results


3) Agora with selection of robust families (first build a ancestral skeleton and then inser genes)
--------------------------------------------------------------------------------------------------

A) step by step (see article for algorithm explanation)
-----------------------------------------------------------

	*/ selection of robust genes
	
	./src/ALL.filterGeneFamilies-size.py ./example/data/Species.conf A0 -IN.ancGenesFiles=./example/results/ancGenes/all/ancGenes.%s.list.bz2 -OUT.ancGenesFiles=./example/results/ancGenes/size-%s-%s/ancGenes.%s.list.bz2 1.0,0.9,0.77 1.0,1.1,1.33 > ./example/results/ancGenes/size.txt.bz2 2> ./example/results/ancGenes/size.log
	
	*/ pairwise comparison
	
	./src/buildSynteny.pairwise-conservedPairs.py ./example/data/Species.conf A0 -ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 -genesFiles=./example/data/genes/genes.%s.list.bz2 -OUT.pairwise=example/results/diags/pairwise/pairs-all/%s.list.bz2  2> example/results/diags/pairwise/pairs-all/pairs.log

	./src/buildSynteny.pairwise-conservedPairs.py ./example/data/Species.conf A0 -ancGenesFiles=example/results/ancGenes/size-0.9-1.1/ancGenes.%s.list.bz2 -genesFiles=./example/data/genes/genes.%s.list.bz2 -OUT.pairwise=example/results/diags/pairwise/pairs-size-0.9-1.1/%s.list.bz2 > example/results/abc 2> example/results/diags/pairwise/pairs-size-0.9-1.1/pairs.log
	
	./src/buildSynteny.pairwise-conservedPairs.py ./example/data/Species.conf A0 -ancGenesFiles=example/results/ancGenes/size-0.77-1.33/ancGenes.%s.list.bz2 -genesFiles=./example/data/genes/genes.%s.list.bz2 -OUT.pairwise=example/results/diags/pairwise/pairs-size-0.77-1.33/%s.list.bz2 > example/results/abc 2> example/results/diags/pairwise/pairs-size-0.77-1.33/pairs.log


	*/ Order of the ancestral skeleton, denovo-integration on robust genes.
	
	./src/buildSynteny.integr-denovo.py ./example/data/Species.conf A0 -OUT.ancDiags=example/results/diags/integr/denovo-size-1.0-1.0/anc/diags.%s.list.bz2 example/results/diags/pairwise/pairs-size-1.0-1.0/%s.list.bz2 -ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 > example/results/diags/integr/denovo-size-1.0-1.0/graph.txt.bz2 2> example/results/diags/integr/denovo-size-1.0-1.0/log
	
	*/ copy of the skeleton results for specific ancestors 
	
	./src/buildSynteny.integr-copy.py ./example/data/Species.conf A0 -OUT.ancDiags=example/results/diags/integr/denovo-size-custom/anc/diags.%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-size-1.0-1.0/anc/diags.%s.list.bz2 > example/results/diags/integr/denovo-size-custom/graph.txt.bz2 2> example/results/diags/integr/denovo-size-custom/log
	
	*/ Refine step of the reconstruction 
	
	./src/buildSynteny.integr-refine.py ./example/data/Species.conf A0 -func=0,32|100,40t|10000 -timeout=150 -OUT.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all/anc/diags.%s.list.bz2 example/results/diags/pairwise/pairs-all/%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-size-custom/anc/diags.%s.list.bz2 > example/results/diags/integr/denovo-size-custom.refine-all/graph.txt.bz2 2> example/results/diags/integr/denovo-size-custom.refine-all/log
	
	
	*/ Extend step of the reconstruction
	
	./src/buildSynteny.integr-extend.py ./example/data/Species.conf A0 +onlySingletons -OUT.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all.extend-all/anc/diags.%s.list.bz2 example/results/diags/pairwise/pairs-all/%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all/anc/diags.%s.list.bz2 > example/results/diags/integr/denovo-size-custom.refine-all.extend-all/graph.txt.bz2 2> example/results/diags/integr/denovo-size-custom.refine-all.extend-all/log
	
	
	*/ Half-insert step of the reconstruction
	
	./src/buildSynteny.integr-halfinsert.py ./example/data/Species.conf A0 -OUT.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all/anc/diags.%s.list.bz2 example/results/diags/pairwise/pairs-all/%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all.extend-all/anc/diags.%s.list.bz2 -REF.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all/anc/diags.%s.list.bz2 > example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all/graph.txt.bz2 2> example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all/log
	
	*/ Scaffolding step of the reconstruction
	
	./src/buildSynteny.integr-groups.py ./example/data/Species.conf A0 A0 -OUT.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all.groups/anc/diags.%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all/anc/diags.%s.list.bz2 -ancGenesFiles=example/results/ancGenes/all/ancGenes.%s.list.bz2 -genesFiles=./example/data/genes/genes.%s.list.bz2 > example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all.groups/graph.txt.bz2 2> example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all.groups/log
	
	*/ Copy of the results in the final repository
	
	./src/buildSynteny.integr-copy.py ./data/Species.conf A0 -OUT.ancDiags=example/results/diags/integr/final/anc/diags.%s.list.bz2 -IN.ancDiags=example/results/diags/integr/denovo-size-custom.refine-all.extend-all.halfinsert-all.groups/anc/diags.%s.list.bz2 > example/results/diags/integr/final/graph.txt.bz2 2> example/results/diags/integr/final/log
	
	
B) Agora.py (encapsulated scripts that will run previous scripts automaticaly).
------------------------------------------------------------------------------

You will have to use the agora-size.ini configuration files to prevent paths and parameters to the scripts described below and in the article.

eg: see conf/agora-size.ini

configure the file and then just run:
	
./src/agora.py conf/agora-size.ini -workingDir=example/results/ > agora-size.log &
